@page "/add-product"


@using Facturatie.Shared
@using System
@using System.Linq
@using MudBlazor
@using static MudBlazor.CategoryTypes


@inject MudBlazor.ISnackbar snackBar
@inject IDialogService DialogService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager


<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add Invoice</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudCard Elevation="25">
            <MudCardContent>
                <EditForm OnValidSubmit="AddProducts" OnInvalidSubmit='()=>snackBar.Add("Product added",Severity.Warning)' Model="@product">
                    <MudItem xs="12" sm="4" md="6">
                        <MudSelect T="Guid" Label="Select invoice" @bind-Value="product.InvoiceID">
                            <MudSelectItem T="Guid" Value="@invoice.InvoiceId">invoices</MudSelectItem>
                            @foreach (var invoice in invoices)
                            {
                                <MudSelectItem T="Guid" Value="@invoice.InvoiceId">@client.ClientName</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudTextField @bind-Value="@product.Name" Label="Name of the product"> </MudTextField>
                    <MudTextField @bind-Value="@product.Description" Label="Description of the product"> </MudTextField>
                    <MudNumericField @bind-Value="@product.Price" Label="Price of product"> </MudNumericField>
                </EditForm>
                <br />
                <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="AddProducts">Add Product</MudButton>
            </MudCardContent>
        </MudCard>
        <br />
        <MudText Typo="Typo.h6">Products in this invoice</MudText>
        



        <MudTable Items="@products" TItem="Product">
            <HeaderContent>
                <MudTh>Product Name</MudTh>
                <MudTh>Description</MudTh>
                <MudTh>Price</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="product Name">@context.Name</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd DataLabel="Price">@context.Price</MudTd>
            </RowTemplate>
        </MudTable>
        <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="Add">Add Product</MudButton>

        <br />
    </MudCardContent>
</MudCard>




@code {
    private Invoice invoice = new Invoice();
    private Client client = new Client();
    private Product product = new Product();
    private DateTime? startDate = DateTime.Now;
    private DateTime? endDate = DateTime.Now.AddMonths(1);
    private List<Invoice> invoices = new List<Invoice>();
    private List<Client> clients = new List<Client>();
    private List<Product> products = new List<Product>();

    DateTime? date = DateTime.Today;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }



    protected override async Task OnInitializedAsync()
    {
        clients = clientService.GetAll();
        invoices = invoiceService.GetAll();
        products = productService.GetAll();
    }

    private List<Product> GetAll()
    {
        products = productService.GetAll();
        return products;
    }


    private void Add()
    {
        if (product.ProductId == Guid.Empty)
        {
            productService.Add(product);
        }
        else
        {
            productService.Update(product);
        }
        product = new Product();
        snackBar.Add("product Added.", Severity.Success);
        GetAll();
        NavigationManager.NavigateTo($"/products");
    }


    private void AddProducts()
    {
        // Associate the product with the current invoice
        product.InvoiceID = invoice.InvoiceId;

        // Add the product to the database using ProductService
        productService.Add(product);

        // Update the list of products
        products = productService.GetProductsByInvoiceId(invoice.InvoiceId);

        snackBar.Add("Product Added.", Severity.Success);
        
    }
}