@page "/detail-invoice/{invoiceId}"


@using Facturatie.Shared
@using System
@using System.Linq
@using MudBlazor
@using static MudBlazor.CategoryTypes


@inject MudBlazor.ISnackbar snackBar
@inject IDialogService DialogService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject ClientService clientService

<h3>DetailInvoice</h3>


@if (invoice != null)
{
    <MudContainer>
        <MudPaper Elevation="3" Padding="16px">
            <MudTextField Disabled="true" Label="Name" Value="@(invoice.Name)" />
            <MudTextField Disabled="true" Label="Invoice number" Value="@(invoice.InvoiceNumber)" />
            <MudTextField Disabled="true" Label="Start date" Value="@(invoice.StartDate.ToShortDateString())" />
            <MudTextField Disabled="true" Label="End date" Value="@(invoice.EndDate.ToShortDateString())" />
            <MudTextField Disabled="true" Label="No VAT" Value="@(invoice.PriceWithoutVAT)" />
            <MudTextField Disabled="true" Label="VAT" Value="@(invoice.PriceWithVAT)" />
            <MudTextField Disabled="true" Label="Client name" Value="@(invoice.Client.ClientName)" />



            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="Close">close</MudButton>
        </MudPaper>
    </MudContainer>
}
else
{
    <p>Loading...</p>
}
@code {
    [Parameter] public string invoiceId { get; set; }

    private Guid parsedInvoiceId;
    private Invoice invoice = new Invoice();
    private Client client = new Client();
    private Product product = new Product();
    private List<Invoice> invoices = new List<Invoice>();
    private List<Client> clients = new List<Client>();
    private List<Product> products = new List<Product>();



    protected override async Task OnInitializedAsync()
    {
        invoices = invoiceService.GetAll();
        clients = clientService.GetAll();
        if (Guid.TryParse(invoiceId, out parsedInvoiceId))
        {
            // Find the client with the specified ID
            invoice = invoices.FirstOrDefault(i => i.InvoiceId == parsedInvoiceId);
        }
        else
        {
            // Handle invalid clientId
        }
    }

    private List<Invoice> GetAll()
    {
        invoices = invoiceService.GetAll();
        return invoices;
    }


    private void Close()
    {
        NavigationManager.NavigateTo($"/Invoices");

    }
}
